MAIN      START
          LD      GR1, =-100
          LD      GR2, =12
          PUSH    0, GR1
          PUSH    0, GR2
          CALL    MULT
          POP     GR0 ; result
          END

;-------------------------------------------------------

MULT      START ; MULT(a, b) -> a * b. args: [a, b, RETURN], return: [result, RETURN]
          POP     GR7 ; GR7 = RETURN
          POP     GR2 ; GR2 = b
          POP     GR1 ; GR1 = a

          LD      GR4, GR1 ; GR4 = 負の数かどうか
          XOR     GR4, GR2
          SRL     GR4, 15

          PUSH    0, GR1
          PUSH    0, GR4
          PUSH    0, GR7
          PUSH    0, GR2 ; b = |b|
          CALL    ABS
          POP     GR2
          POP     GR7
          POP     GR4
          POP     GR1

          PUSH    0, GR2
          PUSH    0, GR4
          PUSH    0, GR7
          PUSH    0, GR1 ; a = |a|
          CALL    ABS
          POP     GR1
          POP     GR7
          POP     GR4
          POP     GR2

          XOR     GR3, GR3 ; GR3 = result

LOOP      CPA     GR2, =0 ; b == 0 ?
          JZE     BREAK ;b == 0なら抜ける
          LD      GR5, GR2 ; bをGR4にコピー
          AND     GR5, ONE ; b &= 1
          JZE     NEXT ; b の1bit目が0ならNEXTへ
          ADDA    GR3, GR1 ; result += a を左シフトしたもの
NEXT      SRL     GR2, 1 ; b >> 1
          SLL     GR1, 1 ; a << 1
          JUMP    LOOP
BREAK     CPA     GR4, ONE ; GR4が1 (aとbのどちらかが負) ならば
          JNZ     NOTMINUS
          XOR     GR3, MASK ; GR3を負にする
          ADDA    GR3, ONE
NOTMINUS  PUSH    0, GR3 ; result
          PUSH    0, GR7 ; RETURN
          RET
ONE       DC      1
MASK      DC      #FFFF
          END

;-------------------------------------------------------

ABS       START ; ABS(a) -> |a|. args: [a, RETURN], return: [|a|, RETURN]
          POP     GR7 ; GR7 = RETURN
          POP     GR1 ; GR0 = a
          CPA     GR1, ZERO
          JPL     ONPLUS ; GR0 > 0 なら抜ける
          XOR     GR1, MASK ; 符号反転
          ADDA    GR1, ONE
ONPLUS    PUSH    0, GR1
          PUSH    0, GR7
          RET
ZERO      DC      0
ONE       DC      1
MASK      DC      #FFFF
          END